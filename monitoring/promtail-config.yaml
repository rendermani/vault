# Promtail Configuration for HashiCorp Stack Log Collection
server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info
  log_format: json

# Client configuration for Loki
clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: cloudya
    batchwait: 1s
    batchsize: 1048576
    backoff_config:
      min_period: 500ms
      max_period: 5m
      max_retries: 10
    timeout: 10s

# Position tracking
positions:
  filename: /tmp/positions.yaml

# Scrape configurations for HashiCorp services
scrape_configs:
  # Vault audit logs
  - job_name: vault-audit
    static_configs:
      - targets:
          - localhost
        labels:
          job: vault-audit
          service: vault
          component: audit
          __path__: /var/log/vault/audit.log*
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            request_id: request.id
            client_token: request.client_token
            operation: request.operation
            path: request.path
            remote_address: request.remote_address
            error: error
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          request_id: request_id
          operation: operation
          path: path
      - output:
          source: message

  # Vault server logs  
  - job_name: vault-server
    static_configs:
      - targets:
          - localhost
        labels:
          job: vault-server
          service: vault
          component: server
          __path__: /var/log/vault/vault.log*
    pipeline_stages:
      - json:
          expressions:
            timestamp: "@timestamp"
            level: "@level"
            message: "@message"
            module: "@module"
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level: level
          module: module

  # Nomad server logs
  - job_name: nomad-server
    static_configs:
      - targets:
          - localhost
        labels:
          job: nomad-server
          service: nomad
          component: server
          __path__: /opt/nomad/logs/nomad-server.log*
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z) \[(?P<level>\w+)\]\s+(?P<module>\w+): (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level: level
          module: module

  # Nomad client logs
  - job_name: nomad-client
    static_configs:
      - targets:
          - localhost
        labels:
          job: nomad-client
          service: nomad
          component: client
          __path__: /opt/nomad/logs/nomad-client.log*
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z) \[(?P<level>\w+)\]\s+(?P<module>\w+): (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level: level
          module: module

  # Consul server logs
  - job_name: consul-server
    static_configs:
      - targets:
          - localhost
        labels:
          job: consul-server
          service: consul
          component: server
          __path__: /var/log/consul/consul.log*
    pipeline_stages:
      - json:
          expressions:
            timestamp: "@timestamp"
            level: "@level"
            message: "@message" 
            component: "@component"
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level: level
          component: component

  # Consul Connect proxy logs (Envoy)
  - job_name: consul-connect-envoy
    static_configs:
      - targets:
          - localhost
        labels:
          job: consul-connect-envoy
          service: consul
          component: connect-proxy
          __path__: /var/log/consul/connect-proxy*.log
    pipeline_stages:
      - regex:
          expression: '\[(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3})\]\[(?P<level>\w+)\]\[(?P<logger>[^\]]+)\] (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000'
      - labels:
          level: level
          logger: logger

  # Traefik access logs
  - job_name: traefik-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: traefik-access
          service: traefik
          component: access
          __path__: /var/log/traefik/access.log*
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            client_addr: ClientAddr
            method: RequestMethod
            host: RequestHost
            path: RequestPath
            protocol: RequestProtocol
            status_code: DownstreamStatus
            response_size: DownstreamContentSize
            duration: Duration
            backend_url: BackendURL
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          method: method
          host: host
          status_code: status_code
          backend_url: backend_url

  # Traefik server logs
  - job_name: traefik-server
    static_configs:
      - targets:
          - localhost
        labels:
          job: traefik-server
          service: traefik
          component: server
          __path__: /var/log/traefik/traefik.log*
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            level: level
            message: msg
            component: entryPointName
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level: level
          component: component

  # System logs (syslog)
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          service: system
          __path__: /var/log/syslog*
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\w+\s+\d+\s+\d+:\d+:\d+) (?P<host>\w+) (?P<process>[^:]+): (?P<message>.*)'
      - timestamp:
          source: timestamp
          format: 'Jan 2 15:04:05'
      - labels:
          host: host
          process: process

  # Docker container logs from HashiCorp services
  - job_name: docker-hashicorp
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-hashicorp
          service: docker
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - json:
          expressions:
            log: log
            stream: stream
            time: time
      - json:
          source: log
          expressions:
            level: level
            message: msg
            timestamp: timestamp
      - timestamp:
          source: time
          format: RFC3339Nano
      - labels:
          stream: stream
          level: level
      # Extract container information from file path
      - regex:
          expression: '/var/lib/docker/containers/(?P<container_id>[^/]+)/(?P<container_id_short>[^-]+)'
      - labels:
          container_id: container_id

  # Application logs from Nomad jobs
  - job_name: nomad-jobs
    consul_sd_configs:
      - server: 'consul.cloudya.net:8500'
        services: []
        tags: ['logging']
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: service
      - source_labels: [__meta_consul_node]
        target_label: node
      - source_labels: [__meta_consul_service_metadata_log_path]
        regex: '(.+)'
        target_label: __path__
        replacement: '${1}'
      - source_labels: [__meta_consul_service_metadata_log_path]
        regex: '(.+)'
        action: keep
    pipeline_stages:
      - json:
          expressions:
            timestamp: time
            level: level
            message: msg
            service: service
            component: component
      - timestamp:
          source: timestamp
          format: RFC3339
      - labels:
          level: level
          service: service
          component: component

# Limits configuration
limits_config:
  readline_rate: 10000
  readline_burst: 20000