# Cloudya Production Environment Configuration Template
# Copy this file to production.env and customize values
# WARNING: This file contains sensitive information - keep it secure!

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================
SERVER_HOST=root@cloudya.net
SSH_KEY_PATH=${HOME}/.ssh/id_rsa
DEPLOYMENT_USER=root
DEPLOYMENT_PATH=/opt/cloudya-infrastructure
DATA_PATH=/opt/cloudya-data

# ============================================================================
# DOMAIN CONFIGURATION
# ============================================================================
PRIMARY_DOMAIN=cloudya.net
VAULT_DOMAIN=vault.cloudya.net
NOMAD_DOMAIN=nomad.cloudya.net
TRAEFIK_DOMAIN=traefik.cloudya.net
GRAFANA_DOMAIN=grafana.cloudya.net
PROMETHEUS_DOMAIN=prometheus.cloudya.net
MINIO_DOMAIN=minio.cloudya.net
MINIO_CONSOLE_DOMAIN=minio-console.cloudya.net

# ============================================================================
# SSL/TLS CONFIGURATION
# ============================================================================
# Let's Encrypt configuration
ACME_EMAIL=admin@cloudya.net
ACME_CASERVER=https://acme-v02.api.letsencrypt.org/directory
# For staging: https://acme-staging-v02.api.letsencrypt.org/directory

# Certificate paths (if using custom certificates)
VAULT_CERT_PATH=${DATA_PATH}/vault/certs/vault.crt
VAULT_KEY_PATH=${DATA_PATH}/vault/certs/vault.key
VAULT_CA_PATH=${DATA_PATH}/vault/certs/ca.crt

# ============================================================================
# VAULT CONFIGURATION
# ============================================================================
VAULT_API_ADDR=https://${VAULT_DOMAIN}
VAULT_CLUSTER_ADDR=https://${VAULT_DOMAIN}:8201
VAULT_LOG_LEVEL=WARN
VAULT_LOG_FORMAT=json
VAULT_STORAGE_TYPE=file
VAULT_DATA_PATH=${DATA_PATH}/vault/data
VAULT_CONFIG_PATH=${DATA_PATH}/vault/config
VAULT_LOG_PATH=/var/log/cloudya/vault.log

# Auto-unseal configuration (uncomment and configure if using cloud KMS)
# VAULT_SEAL_TYPE=awskms
# VAULT_AWS_REGION=us-west-2
# VAULT_KMS_KEY_ID=alias/vault-production-unseal

# Vault HA configuration
VAULT_HA_ENABLED=false
VAULT_PERFORMANCE_STANDBY=false
CONSUL_ADDR=127.0.0.1:8500

# ============================================================================
# NOMAD CONFIGURATION
# ============================================================================
NOMAD_DATACENTER=dc1
NOMAD_REGION=global
NOMAD_LOG_LEVEL=INFO
NOMAD_LOG_JSON=true
NOMAD_DATA_PATH=${DATA_PATH}/nomad/data
NOMAD_CONFIG_PATH=${DATA_PATH}/nomad/config
NOMAD_LOG_PATH=/var/log/cloudya/nomad.log

# Nomad cluster configuration
NOMAD_BOOTSTRAP_EXPECT=1
NOMAD_ENCRYPT_KEY=REPLACE_WITH_GENERATED_KEY

# ============================================================================
# CONSUL CONFIGURATION
# ============================================================================
CONSUL_DATACENTER=dc1
CONSUL_LOG_LEVEL=INFO
CONSUL_DATA_PATH=${DATA_PATH}/consul/data
CONSUL_CONFIG_PATH=${DATA_PATH}/consul/config
CONSUL_LOG_PATH=/var/log/cloudya/consul.log

# ============================================================================
# TRAEFIK CONFIGURATION
# ============================================================================
TRAEFIK_LOG_LEVEL=INFO
TRAEFIK_LOG_FORMAT=json
TRAEFIK_LOG_PATH=/var/log/cloudya/traefik.log
TRAEFIK_ACCESS_LOG_PATH=/var/log/cloudya/traefik-access.log

# Traefik dashboard authentication
TRAEFIK_DASHBOARD_USER=admin
TRAEFIK_DASHBOARD_PASSWORD=REPLACE_WITH_SECURE_PASSWORD
TRAEFIK_DASHBOARD_AUTH=REPLACE_WITH_HTPASSWD_HASH

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
# PostgreSQL
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=cloudya_production
POSTGRES_USER=cloudya
POSTGRES_PASSWORD=REPLACE_WITH_SECURE_PASSWORD

# Redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=REPLACE_WITH_SECURE_PASSWORD

# ============================================================================
# MINIO CONFIGURATION
# ============================================================================
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=REPLACE_WITH_SECURE_PASSWORD
MINIO_DATA_PATH=${DATA_PATH}/minio/data
MINIO_CONSOLE_PORT=9001

# ============================================================================
# MONITORING CONFIGURATION
# ============================================================================
# Prometheus
PROMETHEUS_DATA_PATH=${DATA_PATH}/monitoring/prometheus
PROMETHEUS_RETENTION_TIME=30d
PROMETHEUS_RETENTION_SIZE=50GB

# Grafana
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=REPLACE_WITH_SECURE_PASSWORD
GRAFANA_DATA_PATH=${DATA_PATH}/monitoring/grafana
GRAFANA_SECRET_KEY=REPLACE_WITH_RANDOM_32_CHAR_STRING

# Alert Manager
ALERTMANAGER_DATA_PATH=${DATA_PATH}/monitoring/alertmanager
# Email configuration for alerts
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=alerts@cloudya.net
SMTP_PASSWORD=REPLACE_WITH_EMAIL_PASSWORD
ALERT_EMAIL_TO=admin@cloudya.net

# ============================================================================
# BACKUP CONFIGURATION
# ============================================================================
BACKUP_PATH=/var/backups/cloudya
BACKUP_RETENTION_DAYS=30
BACKUP_ENCRYPTION_KEY=REPLACE_WITH_32_CHAR_ENCRYPTION_KEY

# Remote backup configuration (optional)
# S3_BACKUP_BUCKET=cloudya-backups
# S3_BACKUP_REGION=us-west-2
# AWS_ACCESS_KEY_ID=YOUR_ACCESS_KEY
# AWS_SECRET_ACCESS_KEY=YOUR_SECRET_KEY

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================
# Firewall ports (space-separated)
ALLOWED_PORTS="22 80 443 8200 4646 8500 9090 3000"

# Fail2ban configuration
FAIL2BAN_BANTIME=3600
FAIL2BAN_MAXRETRY=3
FAIL2BAN_FINDTIME=600

# SSH security
SSH_PORT=22
SSH_MAX_AUTH_TRIES=3
SSH_LOGIN_GRACE_TIME=60

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================
# Environment designation
ENVIRONMENT=production
NODE_ENV=production
DEBUG=false

# Application secrets (generate secure values)
JWT_SECRET=REPLACE_WITH_RANDOM_64_CHAR_STRING
SESSION_SECRET=REPLACE_WITH_RANDOM_64_CHAR_STRING
ENCRYPTION_KEY=REPLACE_WITH_32_CHAR_ENCRYPTION_KEY

# ============================================================================
# LOGGING CONFIGURATION
# ============================================================================
LOG_LEVEL=info
LOG_FORMAT=json
LOG_RETENTION_DAYS=30
LOG_MAX_SIZE=100M
LOG_MAX_FILES=10

# Centralized logging (optional)
# ELASTICSEARCH_URL=https://elasticsearch.example.com:9200
# LOGSTASH_HOST=logstash.example.com
# LOGSTASH_PORT=5044

# ============================================================================
# PERFORMANCE TUNING
# ============================================================================
# System limits
MAX_OPEN_FILES=65536
MAX_PROCESSES=32768

# Docker configuration
DOCKER_LOG_MAX_SIZE=100m
DOCKER_LOG_MAX_FILE=5

# ============================================================================
# DEVELOPMENT OVERRIDES (for staging/development)
# ============================================================================
# Uncomment for non-production environments
# VAULT_DEV_MODE=false
# VAULT_DEV_ROOT_TOKEN_ID=dev-only-token
# TRAEFIK_API_INSECURE=false
# ACME_CASERVER=https://acme-staging-v02.api.letsencrypt.org/directory

# ============================================================================
# FEATURE FLAGS
# ============================================================================
ENABLE_MONITORING=true
ENABLE_BACKUPS=true
ENABLE_ALERTING=true
ENABLE_LOG_SHIPPING=true
ENABLE_METRICS_COLLECTION=true
ENABLE_HEALTH_CHECKS=true
ENABLE_SECURITY_SCANNING=false

# ============================================================================
# MAINTENANCE WINDOWS
# ============================================================================
MAINTENANCE_WINDOW_START=02:00
MAINTENANCE_WINDOW_END=04:00
MAINTENANCE_TIMEZONE=UTC
BACKUP_SCHEDULE="0 1 * * *"  # Daily at 1 AM
HEALTH_CHECK_INTERVAL=300    # 5 minutes

# ============================================================================
# NOTES
# ============================================================================
# 1. Replace all REPLACE_WITH_* values with actual secure values
# 2. Generate strong passwords using: openssl rand -base64 32
# 3. Generate encryption keys using: openssl rand -hex 32
# 4. Create htpasswd hashes using: htpasswd -nb username password
# 5. Store this file securely and never commit to version control
# 6. Use Vault to manage secrets in production
# 7. Consider using environment-specific overrides for different deployments