---
- name: Install Docker
  hosts: all
  become: yes
  
  tasks:
    - name: Remove old Docker packages
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Install prerequisites for Docker
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Create directory for Docker GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /tmp/docker.gpg
        mode: '0644'

    - name: Import Docker GPG key
      shell: |
        gpg --dearmor < /tmp/docker.gpg > /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Update apt cache after adding Docker repo
      apt:
        update_cache: yes

    - name: Install Docker Engine
      apt:
        name:
          - docker-ce={{ docker_version }}
          - docker-ce-cli={{ docker_version }}
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Hold Docker packages to prevent automatic updates
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - docker-ce
        - docker-ce-cli

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add users to docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop:
        - ubuntu
        - vault

    - name: Configure Docker daemon
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "3"
            },
            "storage-driver": "overlay2",
            "userland-proxy": false,
            "experimental": false,
            "live-restore": true
          }
        backup: yes
      notify: restart docker

    - name: Create Docker system service override directory
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory

    - name: Configure Docker service limits
      copy:
        dest: /etc/systemd/system/docker.service.d/override.conf
        content: |
          [Service]
          LimitNOFILE=1048576
          LimitNPROC=1048576
          LimitCORE=infinity
      notify:
        - reload systemd
        - restart docker

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify Docker installation
      command: docker --version
      register: docker_version_output
      changed_when: false

    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: docker_compose_version_output
      changed_when: false

    - name: Show Docker versions
      debug:
        msg:
          - "{{ docker_version_output.stdout }}"
          - "{{ docker_compose_version_output.stdout }}"

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart docker
      systemd:
        name: docker
        state: restarted